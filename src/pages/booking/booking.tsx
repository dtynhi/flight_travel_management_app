import React, { useState } from 'react';
import { useMutation } from '@tanstack/react-query';
import axios, { AxiosError } from 'axios';

export default function Booking() {
  const [flightName, setFlightName] = useState('');
  const [price, setPrice] = useState(0);
  const [fullName, setFullName] = useState('');
  const [phone, setPhone] = useState('');
  const [idNumber, setIdNumber] = useState('');
  const [ticketClass, setTicketClass] = useState('Ph·ªï th√¥ng');
  const [email, setEmail] = useState('');
  const [departureDate, setDepartureDate] = useState('');
  const [message, setMessage] = useState('');

  const bookingMutation = useMutation({
    mutationFn: (data: unknown) =>
      axios.post('http://localhost:5000/api/v1/bookings', data, {
        withCredentials: true,
      }),
    onSuccess: () => {
      setMessage('‚úÖ ƒê·∫∑t v√© th√†nh c√¥ng!');
    },
    onError: (error) => {
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      const err = error as AxiosError<any>;
      console.log('üî• L·ªói backend:', err.response?.data?.debug);
      setMessage(`‚ùå ${err.response?.data?.message || 'ƒê·∫∑t v√© th·∫•t b·∫°i.'}`);
    },
  });

  const handleBooking = () => {
    bookingMutation.mutate({
      flight_name: flightName,
      price,
      full_name: fullName,
      phone,
      id_number: idNumber,
      email,
      ticket_class: ticketClass,
      departure_date: departureDate,
    });
  };

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col justify-between">
      {/* N·ªôi dung ch√≠nh */}
      <div className="flex flex-col md:flex-row max-w-6xl mx-auto mt-10 bg-white p-6 rounded shadow-md">
        {/* Form b√™n tr√°i */}
        <div className="flex-1 pr-6">
          <h2 className="text-xl font-semibold text-indigo-700 mb-2">V√© chuy·∫øn bay</h2>
          <p className="text-sm text-gray-600 mb-4">
            Nh·∫≠p ch√≠nh x√°c th√¥ng tin h√†nh kh√°ch v√† ƒë·∫£m b·∫£o s·ªë CMND/CCCD tr√πng kh·ªõp v·ªõi gi·∫•y t·ªù t√πy th√¢n khi l√†m th·ªß t·ª•c.
          </p>

          <input placeholder="Chuy·∫øn bay*" className="border p-2 w-full mb-3" value={flightName} onChange={(e) => setFlightName(e.target.value)} />
          <input placeholder="Gi√° ti·ªÅn*" type="number" className="border p-2 w-full mb-3" value={price} onChange={(e) => setPrice(Number(e.target.value))} />
          <input placeholder="H√†nh kh√°ch*" className="border p-2 w-full mb-3" value={fullName} onChange={(e) => setFullName(e.target.value)} />
          <input placeholder="CMND/CCCD*" className="border p-2 w-full mb-3" value={idNumber} onChange={(e) => setIdNumber(e.target.value)} />
          <input placeholder="ƒêi·ªán tho·∫°i*" className="border p-2 w-full mb-3" value={phone} onChange={(e) => setPhone(e.target.value)} />
          <input placeholder="H·∫°ng v√©*" className="border p-2 w-full mb-3" value={ticketClass} onChange={(e) => setTicketClass(e.target.value)} />
          <input placeholder="Email*" className="border p-2 w-full mb-3" value={email} onChange={(e) => setEmail(e.target.value)} />
          <input type="date" className="border p-2 w-full mb-4" value={departureDate} onChange={(e) => setDepartureDate(e.target.value)} />

          <button
            onClick={handleBooking}
            className="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700 disabled:bg-gray-400"
            disabled={bookingMutation.isLoading}
          >
            {bookingMutation.isLoading ? 'ƒêang g·ª≠i...' : 'L∆∞u v√† ƒë√≥ng'}
          </button>

          <button className="ml-4 px-4 py-2 border rounded hover:bg-gray-100">Ch·ªçn gh·∫ø</button>

          {message && <p className="mt-4 text-center text-sm">{message}</p>}

          {/* Th√¥ng tin h√†nh l√Ω */}
          <div className="mt-6 text-sm text-gray-600">
            <strong>Th√¥ng tin h√†nh l√Ω</strong>
            <p>
              M·ªói h√†nh kh√°ch ƒë∆∞·ª£c mang theo m·ªôt ki·ªán h√†nh l√Ω x√°ch tay v√† m·ªôt v·∫≠t d·ª•ng c√° nh√¢n mi·ªÖn ph√≠. Ki·ªán h√†nh l√Ω k√Ω g·ª≠i ƒë·∫ßu ti√™n ƒë∆∞·ª£c mi·ªÖn ph√≠. H√†nh kh√°ch l√† th√†nh vi√™n ch∆∞∆°ng tr√¨nh kh√°ch h√†ng th√¢n thi·∫øt ƒë∆∞·ª£c mi·ªÖn ph√≠ ki·ªán th·ª© hai. Xem chi ti·∫øt <a href="#" className="text-blue-500 underline">ch√≠nh s√°ch h√†nh l√Ω</a>.
            </p>
            <div className="mt-2">
              <div className="font-medium">H√†nh kh√°ch 1</div>
              <div className="flex items-center gap-2 mt-1">
                <span>H√†nh l√Ω k√Ω g·ª≠i</span>
                <button className="border px-2">‚àí</button>
                <span>1</span>
                <button className="border px-2">+</button>
              </div>
            </div>
          </div>
        </div>

        {/* H√¨nh minh h·ªça */}
        <div className="flex-1 flex justify-center items-center mt-10 md:mt-0">
          <img src="/booking/baggage.png" alt="Minh h·ªça h√†nh l√Ω" className="max-w-xs" />
        </div>
      </div>

      {/* ·∫¢nh ch√¢n trang */}
      <img src="/booking/footer.png" alt="Ch√¢n trang" className="w-full mt-10" />
    </div>
  );
}
